@model Component.Form.Model.Page
@{
    ViewData["Title"] = Model.Title;
    string formId = ViewBag.FormId;
    string previousPageId = ViewBag.PreviousPageId;
}

@if (!String.IsNullOrEmpty(previousPageId)) 
{
    <govuk-back-link href="/form/@formId/@previousPageId">Back</govuk-back-link>
}

@if (!String.IsNullOrEmpty(@Model.Title)) 
{
    <h1 class="govuk-heading-l">@Model.Title</h1>
}

@if (ViewBag.Errors != null && ViewBag.Errors.Count > 1)
{
    <govuk-error-summary>
        @foreach (var error in ViewBag.Errors)
        {
            <govuk-error-summary-item>@error</govuk-error-summary-item>
        }
    </govuk-error-summary>
}

<form method="POST" enctype="multipart/form-data" asp-controller="Form" asp-action="Submit" gfa-prepend-error-summary="false">
    
    <input type="hidden" name="pageId" value="@Model.PageId" />
    <input type="hidden" name="formId" value="@formId" />
    
    @if (Model.Repeating)
    {
        <input type="hidden" name="repeating" value="true" />
        <input type="hidden" name="repeatIndex" value="@Model.RepeatIndex" />
    }

    @foreach (var component in Model.Components)
    {
        switch (component.Type)
        {
            case "html":
                @Html.Raw(component.Content);
                break;
            case "text":
                @await Html.PartialAsync("FormComponents/_TextInput", component)
                break;
            case "select":
                @await Html.PartialAsync("FormComponents/_Select", component)
                break;
            case "radio":
                @await Html.PartialAsync("FormComponents/_Radios", component)
                break;
            case "checkbox":
                @await Html.PartialAsync("FormComponents/_Checkboxes", component)
                break;
            case "multilineText":
                @await Html.PartialAsync("FormComponents/_MultilineText", component)
                break;
            case "file":
                @await Html.PartialAsync("FormComponents/_FileUpload", component)
                break;
            case "yesno":
                @await Html.PartialAsync("FormComponents/_YesNo", component)
                break;
            case "ukaddress":
                @await Html.PartialAsync("FormComponents/_UkAddress", component)
                break;
            case "email":             
                @await Html.PartialAsync("FormComponents/_EmailAddress", component)
                break;
            case "phonenumber":
                @await Html.PartialAsync("FormComponents/_PhoneNumber", component)
                break;
            case "fileupload":
                @await Html.PartialAsync("FormComponents/_FileUpload", component)
                break;
            case "dateparts":
                @await Html.PartialAsync("FormComponents/_DateParts", component)
                break;
            }
    }
    
    <govuk-button type="submit" class="btn btn-primary">Continue</govuk-button>
</form>